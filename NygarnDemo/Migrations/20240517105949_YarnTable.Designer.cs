// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NygarnDemo.EFDbContext;

#nullable disable

namespace NygarnDemo.Migrations
{
    [DbContext(typeof(YarnDbContext))]
    [Migration("20240517105949_YarnTable")]
    partial class YarnTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NygarnDemo.Models.CrochetHook", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Material")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Set")
                        .HasColumnType("bit");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("CrochetHook");
                });

            modelBuilder.Entity("NygarnDemo.Models.KnittingNeedle", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Material")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Set")
                        .HasColumnType("bit");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("KnittingNeedle");
                });

            modelBuilder.Entity("NygarnDemo.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.HasKey("OrderId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("NygarnDemo.Models.OrderLine", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderLine");
                });

            modelBuilder.Entity("NygarnDemo.Models.Pattern", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Designer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DifficultyLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Fits")
                        .HasColumnType("int");

                    b.Property<bool>("FreePattern")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.ToTable("Pattern");
                });

            modelBuilder.Entity("NygarnDemo.Models.Tool", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Tool");
                });

            modelBuilder.Entity("NygarnDemo.Models.Yarn", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("KnittingTension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MachineWash")
                        .HasColumnType("bit");

                    b.Property<int>("Material")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SuggestedNeedleSize")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.Property<string>("Yardage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("YarnProducts", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Amount = 10,
                            Brand = "Sandnes",
                            Color = 0,
                            Description = "Meget luksus garn, ikke egnet til påklædning.",
                            KnittingTension = "KnittingTension10mX10cm",
                            MachineWash = false,
                            Material = 0,
                            Name = "Luksus garn",
                            Price = 99m,
                            SuggestedNeedleSize = 2,
                            Weight = 100,
                            Yardage = "Yardage400mPr50g"
                        },
                        new
                        {
                            ProductId = 2,
                            Amount = 10,
                            Brand = "Sandne",
                            Color = 0,
                            Description = "Meget luksus garn, ikke egnet til påklædning.",
                            KnittingTension = "KnittingTension10mX10cm",
                            MachineWash = false,
                            Material = 0,
                            Name = "Saga",
                            Price = 49m,
                            SuggestedNeedleSize = 2,
                            Weight = 100,
                            Yardage = "Yardage400mPr50g"
                        },
                        new
                        {
                            ProductId = 3,
                            Amount = 1,
                            Brand = "Sandnes",
                            Color = 9,
                            Description = "Vildt lækkert mohair garn til din næste sweater",
                            KnittingTension = "knittingTension21mX10cm",
                            MachineWash = true,
                            Material = 2,
                            Name = "MyHair",
                            Price = 79m,
                            SuggestedNeedleSize = 1,
                            Weight = 50,
                            Yardage = "Yardage215mPr50g"
                        },
                        new
                        {
                            ProductId = 4,
                            Amount = 1,
                            Brand = "Petitknit",
                            Color = 9,
                            Description = "Vildt lækkert alpakka garn til dit næste tørklæde",
                            KnittingTension = "knittingTension25mX10cm",
                            MachineWash = true,
                            Material = 0,
                            Name = "MaLamaa",
                            Price = 69m,
                            SuggestedNeedleSize = 3,
                            Weight = 50,
                            Yardage = "Yardage300mPr50g"
                        },
                        new
                        {
                            ProductId = 5,
                            Amount = 1,
                            Brand = "Petitknit",
                            Color = 0,
                            Description = "Vildt lækkert silke garn til dit næste hårbånd",
                            KnittingTension = "knittingTension30mX10cm",
                            MachineWash = false,
                            Material = 1,
                            Name = "SlikkeSilke",
                            Price = 75m,
                            SuggestedNeedleSize = 5,
                            Weight = 50,
                            Yardage = "Yardage400mPr50g"
                        });
                });

            modelBuilder.Entity("NygarnDemo.Models.OrderLine", b =>
                {
                    b.HasOne("NygarnDemo.Models.Order", "Order")
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NygarnDemo.Models.CrochetHook", "CrochetHook")
                        .WithMany("OrderLines")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NygarnDemo.Models.KnittingNeedle", "KnittingNeedle")
                        .WithMany("OrderLines")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NygarnDemo.Models.Pattern", "Pattern")
                        .WithMany("OrderLines")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NygarnDemo.Models.Tool", "Tool")
                        .WithMany("OrderLines")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NygarnDemo.Models.Yarn", "Yarn")
                        .WithMany("OrderLines")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CrochetHook");

                    b.Navigation("KnittingNeedle");

                    b.Navigation("Order");

                    b.Navigation("Pattern");

                    b.Navigation("Tool");

                    b.Navigation("Yarn");
                });

            modelBuilder.Entity("NygarnDemo.Models.CrochetHook", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("NygarnDemo.Models.KnittingNeedle", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("NygarnDemo.Models.Order", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("NygarnDemo.Models.Pattern", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("NygarnDemo.Models.Tool", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("NygarnDemo.Models.Yarn", b =>
                {
                    b.Navigation("OrderLines");
                });
#pragma warning restore 612, 618
        }
    }
}
