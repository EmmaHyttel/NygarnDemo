// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NygarnDemo.EFDbContext;

#nullable disable

namespace NygarnDemo.Migrations
{
    [DbContext(typeof(NygarnDbContext))]
    partial class NygarnDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NygarnDemo.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserName");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("NygarnDemo.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.ToTable("Product");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("NygarnDemo.Models.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("UserName");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            UserName = "admin",
                            Address = "En sej gade",
                            Email = "nem_hard@garn.dk",
                            Id = 1,
                            LastName = "HARD",
                            Name = "NEM",
                            Password = "AQAAAAIAAYagAAAAECIqG2E7Ouv8o46Q33eG17pR9e9MO/UjtEX+kYhlLKDCToQu2DV7No3GdkRAAcgz5w==",
                            Phone = "69696969"
                        },
                        new
                        {
                            UserName = "EmmaStrikker123",
                            Address = "Vejgade 1",
                            Email = "emmastrikker@garn.dk",
                            Id = 2,
                            LastName = "Hyttel",
                            Name = "Emma",
                            Password = "AQAAAAIAAYagAAAAEEHQF3pDIBTYXmpF/euTU6NS6IiG0qsSsKC3Xl8kDdQ2Vo9fTbNr1NqatyLMtSZX8A==",
                            Phone = "12345678"
                        },
                        new
                        {
                            UserName = "MaiStrikker123",
                            Address = "Vejgade 2",
                            Email = "maistrikker@garn.dk",
                            Id = 3,
                            LastName = "Dinh",
                            Name = "Mai",
                            Password = "AQAAAAIAAYagAAAAEIz+d70FuHKaeLfP7owSix30deVopcscp5JQFRksr8VNKd/5r8i1feornvibX1pBbw==",
                            Phone = "23456789"
                        },
                        new
                        {
                            UserName = "NannaHækler123",
                            Address = "Vejgade 3",
                            Email = "nannahækler@garn.dk",
                            Id = 4,
                            LastName = "Rister",
                            Name = "Nanna",
                            Password = "AQAAAAIAAYagAAAAEN9YerbH4ZW0Ae2xSTpXyinTjSBFsz071NG2Agdx7nQJDUcGBjYoQLow/0qOhRPgGw==",
                            Phone = "34567891"
                        });
                });

            modelBuilder.Entity("NygarnDemo.Models.CrochetHook", b =>
                {
                    b.HasBaseType("NygarnDemo.Models.Product");

                    b.Property<int>("Material")
                        .HasColumnType("int");

                    b.Property<bool>("Set")
                        .HasColumnType("bit");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.ToTable("CrochetHook", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = 12,
                            Amount = 1,
                            Brand = "PetitKnit",
                            Description = "Gode til alt",
                            Name = "Knyt",
                            Price = 49m,
                            Material = 0,
                            Set = true,
                            Size = 7
                        },
                        new
                        {
                            ProductId = 13,
                            Amount = 2,
                            Brand = "PetitKnit",
                            Description = "Gode til alt",
                            Name = "KnitPro",
                            Price = 149m,
                            Material = 0,
                            Set = false,
                            Size = 3
                        },
                        new
                        {
                            ProductId = 14,
                            Amount = 1,
                            Brand = "PetitKnit",
                            Description = "",
                            Name = "NeedlePickled",
                            Price = 599m,
                            Material = 0,
                            Set = false,
                            Size = 9
                        });
                });

            modelBuilder.Entity("NygarnDemo.Models.KnittingNeedle", b =>
                {
                    b.HasBaseType("NygarnDemo.Models.Product");

                    b.Property<int>("Material")
                        .HasColumnType("int");

                    b.Property<bool>("Set")
                        .HasColumnType("bit");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.ToTable("KnittingNeedle", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = 9,
                            Amount = 1,
                            Brand = "KnitPro",
                            Description = "Gode til alt",
                            Name = "KnitPro",
                            Price = 149m,
                            Material = 0,
                            Set = true,
                            Size = 3,
                            Type = 1
                        },
                        new
                        {
                            ProductId = 10,
                            Amount = 1,
                            Brand = "KnitPro",
                            Description = "Dejlig store",
                            Name = "Hot",
                            Price = 499m,
                            Material = 2,
                            Set = true,
                            Size = 5,
                            Type = 3
                        },
                        new
                        {
                            ProductId = 11,
                            Amount = 1,
                            Brand = "KnitPro",
                            Description = "Gode til alt",
                            Name = "KnitPro",
                            Price = 140m,
                            Material = 0,
                            Set = true,
                            Size = 3,
                            Type = 1
                        });
                });

            modelBuilder.Entity("NygarnDemo.Models.Tool", b =>
                {
                    b.HasBaseType("NygarnDemo.Models.Product");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Tool", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = 6,
                            Amount = 12,
                            Brand = "PetitKnit",
                            Description = "Rigtig fine små knapper, der passer perfekt til lukningen på en bodystocking",
                            Name = "Babyknap",
                            Price = 30m,
                            Size = "5 mm",
                            Type = "Knapper"
                        },
                        new
                        {
                            ProductId = 7,
                            Amount = 1,
                            Brand = "PetitKnit",
                            Description = "Fuldstændig præcis målebånd",
                            Name = "Målebånd",
                            Price = 25m,
                            Size = "100 cm",
                            Type = "Målebånd"
                        },
                        new
                        {
                            ProductId = 8,
                            Amount = 1,
                            Brand = "Sandnes",
                            Description = "Super blødt bamsefyld til dit næste hækleprojekt",
                            Name = "Bamsefyld",
                            Price = 40m,
                            Size = "100 gram",
                            Type = "Fyld"
                        });
                });

            modelBuilder.Entity("NygarnDemo.Models.Yarn", b =>
                {
                    b.HasBaseType("NygarnDemo.Models.Product");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<string>("KnittingTension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MachineWash")
                        .HasColumnType("bit");

                    b.Property<int>("Material")
                        .HasColumnType("int");

                    b.Property<int>("SuggestedNeedleSize")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.Property<string>("Yardage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Yarn", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Amount = 10,
                            Brand = "Sandnes",
                            Description = "Meget luksus garn, ikke egnet til påklædning.",
                            Name = "Luksus garn",
                            Price = 99m,
                            Color = 0,
                            KnittingTension = "KnittingTension10mX10cm",
                            MachineWash = false,
                            Material = 0,
                            SuggestedNeedleSize = 2,
                            Weight = 100,
                            Yardage = "Yardage400mPr50g"
                        },
                        new
                        {
                            ProductId = 2,
                            Amount = 10,
                            Brand = "Sandne",
                            Description = "Meget luksus garn, ikke egnet til påklædning.",
                            Name = "Saga",
                            Price = 49m,
                            Color = 0,
                            KnittingTension = "KnittingTension10mX10cm",
                            MachineWash = false,
                            Material = 0,
                            SuggestedNeedleSize = 2,
                            Weight = 100,
                            Yardage = "Yardage400mPr50g"
                        },
                        new
                        {
                            ProductId = 3,
                            Amount = 1,
                            Brand = "Sandnes",
                            Description = "Vildt lækkert mohair garn til din næste sweater",
                            Name = "MyHair",
                            Price = 79m,
                            Color = 9,
                            KnittingTension = "knittingTension21mX10cm",
                            MachineWash = true,
                            Material = 2,
                            SuggestedNeedleSize = 1,
                            Weight = 50,
                            Yardage = "Yardage215mPr50g"
                        },
                        new
                        {
                            ProductId = 4,
                            Amount = 1,
                            Brand = "Petitknit",
                            Description = "Vildt lækkert alpakka garn til dit næste tørklæde",
                            Name = "MaLamaa",
                            Price = 69m,
                            Color = 9,
                            KnittingTension = "knittingTension25mX10cm",
                            MachineWash = true,
                            Material = 0,
                            SuggestedNeedleSize = 3,
                            Weight = 50,
                            Yardage = "Yardage300mPr50g"
                        },
                        new
                        {
                            ProductId = 5,
                            Amount = 1,
                            Brand = "Petitknit",
                            Description = "Vildt lækkert silke garn til dit næste hårbånd",
                            Name = "SlikkeSilke",
                            Price = 75m,
                            Color = 0,
                            KnittingTension = "knittingTension30mX10cm",
                            MachineWash = false,
                            Material = 1,
                            SuggestedNeedleSize = 5,
                            Weight = 50,
                            Yardage = "Yardage400mPr50g"
                        });
                });

            modelBuilder.Entity("NygarnDemo.Models.Order", b =>
                {
                    b.HasOne("NygarnDemo.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NygarnDemo.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserName");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NygarnDemo.Models.CrochetHook", b =>
                {
                    b.HasOne("NygarnDemo.Models.Product", null)
                        .WithOne()
                        .HasForeignKey("NygarnDemo.Models.CrochetHook", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NygarnDemo.Models.KnittingNeedle", b =>
                {
                    b.HasOne("NygarnDemo.Models.Product", null)
                        .WithOne()
                        .HasForeignKey("NygarnDemo.Models.KnittingNeedle", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NygarnDemo.Models.Tool", b =>
                {
                    b.HasOne("NygarnDemo.Models.Product", null)
                        .WithOne()
                        .HasForeignKey("NygarnDemo.Models.Tool", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NygarnDemo.Models.Yarn", b =>
                {
                    b.HasOne("NygarnDemo.Models.Product", null)
                        .WithOne()
                        .HasForeignKey("NygarnDemo.Models.Yarn", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NygarnDemo.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
